[build-system]
requires = [ "poetry-core",]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "poki_books"
version = "0.2.4"
description = "Simple book and text reader"
authors = [ "pat955 <patricija.pivoraite@gmail.com>",]
readme = "README.md"
packages = [
    { include = "src" }
]

[tool.poetry.dependencies]
python = "^3.10"
nltk = "3.8.1"
toml = "0.10.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.semantic_release]
version_variable = [ "pyproject.toml:tool.poetry.version",]
branch = "main"
changelog_file = "CHANGELOG.md"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install poetry && poetry build"
dist_path = "dist/"
remove_dist = true

[tool.poetry.dependencies]
python = "^3.10"
nltk = "3.8.1"
toml = "0.10.2"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
repo_dir = "/home/purpleearrings/workspace/github.com/pat955/poki_books"
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.commit_parser_options]
allowed_tags = [ "build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test",]
minor_tags = [ "feat",]
patch_tags = [ "fix", "perf",]
default_bump_level = 0

[tool.semantic_release.remote]
env = "GH_TOKEN"
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = [ "dist/*",]
upload_to_vcs_release = true

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false
